# Сортировка выбором
#
# Сортировка выбором (selection sort) — это простой алгоритм сортировки, который на каждом шаге находит минимальный
# или максимальный элемент из неотсортированной части списка и помещает его в начало или конец отсортированной части.

# Преимущества сортировки выбором:
# - Простота реализации. Это один из самых простых алгоритмов сортировки для понимания и реализации. Требует только
#   базовых операций сравнения и перестановки элементов.
# - Потребление памяти. Работает непосредственно со списком, не требуя памяти для хранения дополнительных структур
#   данных.
# - Устойчивость. Сортировка выбором устойчива, что означает, что она сохраняет относительный порядок элементов с
#   одинаковыми значениями.
#
# Недостатки алгоритма сортировки выбором:
# - Квадратичная сложность времени. Время выполнения алгоритма растёт пропорционально квадрату количества элементов,
#   что делает его неэффективным для больших наборов данных.
# - Ограниченная эффективность. По сравнению с некоторыми другими алгоритмами сортировки, сортировка выбором обычно
#   менее эффективна и требует больше операций сравнения и обмена элементов.

def selection_sort(lst):
    n = len(lst)
    for i in range(n - 1):
        min_index = i
        # находим индекс минимального элемента в неотсортированной части списка
        for j in range(i + 1, n):
            if lst[j] < lst[min_index]:
                min_index = j
        # меняем местами минимальный элемент с первым элементом неотсортированной части
        lst[i], lst[min_index] = lst[min_index], lst[i]


if __name__ == '__main__':
    numbers = [5, 3, 8, 2, 1]
    selection_sort(numbers)
    print(numbers)

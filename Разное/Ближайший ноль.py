# Ограничение времени 1 секунда
# Ограничение памяти 64Mb
#
# Тимофей ищет место, чтобы построить себе дом. Улица, на которой он хочет жить, имеет длину n, то есть состоит из
# n одинаковых идущих подряд участков. Каждый участок либо пустой, либо на нём уже построен дом.
#
# Общительный Тимофей не хочет жить далеко от других людей на этой улице. Поэтому ему важно для каждого участка знать
# расстояние до ближайшего пустого участка. Если участок пустой, эта величина будет равна нулю — расстояние до самого
# себя.
#
# Помогите Тимофею посчитать искомые расстояния. Для этого у вас есть карта улицы. Дома в городе Тимофея нумеровались
# в том порядке, в котором строились, поэтому их номера на карте никак не упорядочены. Пустые участки обозначены нулями.
#
# Формат ввода
# В первой строке дана длина улицы —– n (1 ≤ n ≤ 10**6). В следующей строке записаны n целых неотрицательных чисел —
# номера домов и обозначения пустых участков на карте (нули). Гарантируется, что в последовательности есть хотя бы
# один ноль. Номера домов (положительные числа) уникальны и не превосходят 109.
#
# Формат вывода
# Для каждого из участков выведите расстояние до ближайшего нуля. Числа выводите в одну строку, разделяя их пробелами.

length = int(input())
numbers = list(map(int, input().split()))

ans = [0] * length

# находим индекс левого нуля
left = 0
while numbers[left] != 0:
    left += 1

# находим индекс правого нуля
right = length - 1
while numbers[right] != 0:
    right -= 1

# заполняем все, что левее левого нуля
for i in range(left, length):
    if numbers[i] == 0:
        ans[i] = 0
    else:
        ans[i] = ans[i - 1] + 1

# заполняем все от правого нуля до левого
for i in range(right, left, -1):
    if numbers[i] == 0:
        ans[i] = 0
    else:
        ans[i] = min(ans[i], ans[i + 1] + 1)

# заполняем оставшуюся часть от левого нуля до начала
for i in range(left, -1, -1):
    if numbers[i] == 0:
        ans[i] = 0
    else:
        ans[i] = ans[i + 1] + 1

print(*ans)
